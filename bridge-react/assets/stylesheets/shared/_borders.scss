@charset "utf-8";

/*doc
---
title: Borders
name: 001_borders
category: Borders
---

[[[plugin:src-file-path]]]

Borders are added with two classes: one class for the border sides, and another for color (see below).

Border side classes take the form `border-[sides]`, where `[sides]` is
replaced with a combination of t, r, b, and l (for top, right, bottom, and
left borders respectively).


```html_example
<p class="border-tb border-indigo">
  I have top and bottom borders.
</p>
```

```html_example
<p class="border-rl border-indigo">
  I have left and right borders.
</p>
```

```html_example
<p class="border-trbl border-indigo">
  I have borders on all sides.
</p>
```

*/

// Generate border declarations.
//
// $style - the border style
// $width - the border width
// $sides - which sides of the element get borders
//
// Example
//
//   ```scss
//   .foo {
//     @include borders(dashed, 1px, top right);
//   }
//   ```
//
//   # =>
//   #
//   # .foo {
//   #   border-top-style: dashed;
//   #   border-top-width: 1px;
//   #   border-right-style: dashed;
//   #   border-right-width: 1px;
//   # }
@mixin borders($style, $width, $sides: top right bottom left) {
  @each $side in $sides {
    border-#{$side}-style: $style;
    border-#{$side}-width: $width;
  }
}

$border-width-codes: default, heavy;
@each $style in solid, dotted, dashed { // TODO: Add more styles as needed.
  @each $width-code in $border-width-codes {
    $suffix: "";
    @if $style != solid {
      $suffix: "-#{$style}";
    }

    $width: 1px * index($border-width-codes, $width-code);
    @if $width-code != default {
      $suffix: "#{$suffix}-#{$width-code}";
    }

    // t
    @include breakpointify(".border-t#{$suffix}") {
      @include borders($style, $width, top)
    }
    // r
    @include breakpointify(".border-r#{$suffix}") {
      @include borders($style, $width, right)
    }
    // b
    @include breakpointify(".border-b#{$suffix}") {
      @include borders($style, $width, bottom)
    }
    // l
    @include breakpointify(".border-l#{$suffix}") {
      @include borders($style, $width, left)
    }
    // tr
    @include breakpointify(".border-tr#{$suffix}") {
      @include borders($style, $width, top right);
    }
    // tb
    @include breakpointify(".border-tb#{$suffix}") {
      @include borders($style, $width, top bottom);
    }
    // tl
    @include breakpointify(".border-tl#{$suffix}") {
      @include borders($style, $width, top left);
    }
    // rb
    @include breakpointify(".border-rb#{$suffix}") {
      @include borders($style, $width, right bottom);
    }
    // rl
    @include breakpointify(".border-rl#{$suffix}") {
      @include borders($style, $width, right left);
    }
    // bl
    @include breakpointify(".border-bl#{$suffix}") {
      @include borders($style, $width, bottom left);
    }
    // trb
    @include breakpointify(".border-trb#{$suffix}") {
      @include borders($style, $width, top right bottom);
    }
    // trl
    @include breakpointify(".border-trl#{$suffix}") {
      @include borders($style, $width, top right left);
    }
    // tbl
    @include breakpointify(".border-tbl#{$suffix}") {
      @include borders($style, $width, top bottom left);
    }
    // rbl
    @include breakpointify(".border-rbl#{$suffix}") {
      @include borders($style, $width, right bottom left);
    }
    // trbl
    @include breakpointify(".border#{$suffix}") {
      @include borders($style, $width, top right bottom left);
    }
    @include breakpointify(".border-trbl#{$suffix}") {
      @include borders($style, $width, top right bottom left);
    }
  }
}

/*doc
---
title: Border Colors
name: border_colors
category: Borders
---

Border color classes take the form `border-[color]`, where `[color]` is the
name from the `_color.scss` file.

<ul class="sg-border-colors">
  <li class="border-transparent">
  <li class="border-indigo">
  <li class="border-white">
  <li class="border-grey">
  <li class="border-med-grey">
  <li class="border-dark-grey">
  <li class="border-blue">
  <li class="border-cyan">
  <li class="border-purple">
  <li class="border-pink">
  <li class="border-orange">
  <li class="border-yellow">
  <li class="border-green">
  <li class="border-light-green">
  <li class="border-white-op10">
</ul>

*/

@include breakpointify(".border-indigo")      { border-color: $indigo;     }
@include breakpointify(".border-white")       { border-color: $white;      }
@mixin border-grey                            { border-color: $grey;       }
@include breakpointify(".border-grey")        { @include border-grey;      }
@include breakpointify(".border-med-grey")    { border-color: $med-grey;   }
@include breakpointify(".border-dark-grey")   { border-color: $dark-grey;  }
@include breakpointify(".border-blue-grey")   { border-color: $blue-grey;  }
@include breakpointify(".border-blue")        { border-color: $blue;       }
@include breakpointify(".border-cyan")        { border-color: $cyan;       }
@include breakpointify(".border-purple")      { border-color: $purple;     }
@include breakpointify(".border-pink")        { border-color: $pink;       }
@include breakpointify(".border-orange")      { border-color: $orange;     }
@include breakpointify(".border-yellow")      { border-color: $yellow;     }
@include breakpointify(".border-green")       { border-color: $green;      }
@include breakpointify(".border-light-green") { border-color: $light-green;}
@include breakpointify(".border-light-grey")  { border-color: $light-grey; }
@include breakpointify(".border-transparent") { border-color: $transparent;}
// variants
@include breakpointify(".border-white-op10") { border-color: $white-op10; }


// reset
// TODO: document this
@include breakpointify(".border-none") {
  border: 0;
}

/*doc
---
title: Rounded Corners
name: rounded_corners
category: Borders
---

```html_example
<p class="border-trbl border-indigo rounded-corners-default">
  I have borders on all sides and rounded corners.
</p>
```

*/

$border-radius-default: 5px;

@mixin rounded-corners-default {
  border-radius: $border-radius-default;
}
.rounded-corners-default, %rounded-corners-default { @include rounded-corners-default; }

@mixin circular { // TODO: document this
  border-radius: 50%;
}
%circular { @include circular; }

/*doc
---
title: Shadows
name: shadows
category: Borders
---

```html_example
<p class="shadow">
  I have a shadow.
</p>
```

*/

@mixin shadow {
  box-shadow: 0px 0px 20px $black-op20;
}
.shadow, %shadow { @include shadow; }


.blue-outline {
  &, &:focus {
    box-shadow: 0 0 0 2px $blue;
  }
}
