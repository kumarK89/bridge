.distribute-box {

  &__element {
    @extend .border-t;
    @include border-grey;
    @include space(padding, xs);

    &--empty {
      color: $dark-grey;
    }
  }

  // selected groups
  &__groups {
    min-height: 120px;
    overflow: auto;
    padding-top: 0;
    padding-bottom: 0;

    &__item {
      padding: 14px 8px;
      line-height: 32px;
      @extend .border-b;
      @include border-grey;
    }
    &__item:last-child {
      border-bottom: 0;
    }
  }

  // title/date/time inputs
  &__input {
    @include rounded-corners-default;
    @include space(padding, xs);
    border: 2px solid $transparent;
    width: 100%;

    &:focus {
      @include transition(box-shadow, 0.3s, $ease-in-out-back);

      outline: none;
      border-color: $blue;
      box-shadow: 0 0 10px 2px $indigo-op25;
      background: $white;
    }

    &--date,
    &--time {
      width: 30%
    }

    @include breakpoint(small) {
      &--date,
      &--time {
        width: 100%
      }
    }
  }

  // autocomplete group picker
  &__group-picker {
    width: 100%;
  }

  &__group-picker-list {
    max-height: 190px;
  }

  &__group-picker-option {
    padding: 14px 8px;
    line-height: 32px;

    .avatar {
      @include transition(none);
    }
  }

  &__group-picker-option:focus {
    outline: none;
    background: $blue;

    .avatar {
      color: $white;
    }
  }

  &__group-picker-option--none {
    display: block;
    @extend .border-t;
    @include border-grey;
    padding: 16px 8px;
    cursor: default;
  }

  &__contents {
    padding: 0;
  }

  &__footer {
    @include space(padding, s);
    @include clearfix;
    @extend .border-t;
    @include border-grey;
    text-align: right;

    .button-cancel {
      color: $blue-grey;
      @include breakpoint(small) {
        float: left;
      }
    }
  }

  &__modal {
    @include transition(opacity 300ms ease);

    width: 400px;
    height: auto;
    box-shadow: 0 0 12px rgba(0, 0, 0, .2);
    border-radius: $border-radius-default;
    border: 0px;
    background: $white;
    padding: 0px;

    &.ReactModal__Content {
      bottom: auto;
      left: auto;
      opacity: 0;
      position: absolute;
      right: auto;
      top: auto;

      &--after-open {
        opacity: 1;
      }
    }

    @include breakpoint(small) {
      width: 100%;
      position: fixed;
      top: 0;
      right:0;
      bottom:0;
      left: 0;
      margin: 0;
      border-radius: 0;
    }
  }

  &__overlay {
    background-color: transparent;
  }
}
