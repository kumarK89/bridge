/**
 * This class is generated by jOOQ
 */
package com.bridge.entity.tables;


import com.bridge.entity.Keys;
import com.bridge.entity.Public;
import com.bridge.entity.tables.records.SurveyQuestionsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SurveyQuestions extends TableImpl<SurveyQuestionsRecord> {

    private static final long serialVersionUID = -322148266;

    /**
     * The reference instance of <code>public.survey_questions</code>
     */
    public static final SurveyQuestions SURVEY_QUESTIONS = new SurveyQuestions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SurveyQuestionsRecord> getRecordType() {
        return SurveyQuestionsRecord.class;
    }

    /**
     * The column <code>public.survey_questions.id</code>.
     */
    public final TableField<SurveyQuestionsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.survey_questions.question_text</code>.
     */
    public final TableField<SurveyQuestionsRecord, String> QUESTION_TEXT = createField("question_text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.survey_questions.survey_id</code>.
     */
    public final TableField<SurveyQuestionsRecord, Long> SURVEY_ID = createField("survey_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.survey_questions.is_required</code>.
     */
    public final TableField<SurveyQuestionsRecord, Boolean> IS_REQUIRED = createField("is_required", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.survey_questions.answer_type_id</code>.
     */
    public final TableField<SurveyQuestionsRecord, Long> ANSWER_TYPE_ID = createField("answer_type_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.survey_questions.option_id</code>.
     */
    public final TableField<SurveyQuestionsRecord, Long> OPTION_ID = createField("option_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.survey_questions.pre_text_message</code>.
     */
    public final TableField<SurveyQuestionsRecord, String> PRE_TEXT_MESSAGE = createField("pre_text_message", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.survey_questions.created_by</code>.
     */
    public final TableField<SurveyQuestionsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.survey_questions.updated_by</code>.
     */
    public final TableField<SurveyQuestionsRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.survey_questions.created_at</code>.
     */
    public final TableField<SurveyQuestionsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.survey_questions.updated_at</code>.
     */
    public final TableField<SurveyQuestionsRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.survey_questions.is_allow_pre_text</code>.
     */
    public final TableField<SurveyQuestionsRecord, Boolean> IS_ALLOW_PRE_TEXT = createField("is_allow_pre_text", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>public.survey_questions</code> table reference
     */
    public SurveyQuestions() {
        this("survey_questions", null);
    }

    /**
     * Create an aliased <code>public.survey_questions</code> table reference
     */
    public SurveyQuestions(String alias) {
        this(alias, SURVEY_QUESTIONS);
    }

    private SurveyQuestions(String alias, Table<SurveyQuestionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SurveyQuestions(String alias, Table<SurveyQuestionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SurveyQuestionsRecord> getPrimaryKey() {
        return Keys.SURVEY_QUESTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SurveyQuestionsRecord>> getKeys() {
        return Arrays.<UniqueKey<SurveyQuestionsRecord>>asList(Keys.SURVEY_QUESTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SurveyQuestionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SurveyQuestionsRecord, ?>>asList(Keys.SURVEY_QUESTIONS__SURVEYS_SURVEY_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SurveyQuestions as(String alias) {
        return new SurveyQuestions(alias, this);
    }

    /**
     * Rename this table
     */
    public SurveyQuestions rename(String name) {
        return new SurveyQuestions(name, null);
    }
}
