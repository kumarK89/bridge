/**
 * This class is generated by jOOQ
 */
package com.bridge.entity.tables;


import com.bridge.entity.Keys;
import com.bridge.entity.Public;
import com.bridge.entity.tables.records.AnswerOptionsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswerOptions extends TableImpl<AnswerOptionsRecord> {

    private static final long serialVersionUID = -485724362;

    /**
     * The reference instance of <code>public.answer_options</code>
     */
    public static final AnswerOptions ANSWER_OPTIONS = new AnswerOptions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnswerOptionsRecord> getRecordType() {
        return AnswerOptionsRecord.class;
    }

    /**
     * The column <code>public.answer_options.id</code>.
     */
    public final TableField<AnswerOptionsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.answer_options.answer_type_id</code>.
     */
    public final TableField<AnswerOptionsRecord, Long> ANSWER_TYPE_ID = createField("answer_type_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.answer_options.option_text</code>.
     */
    public final TableField<AnswerOptionsRecord, String> OPTION_TEXT = createField("option_text", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.answer_options.text_response</code>.
     */
    public final TableField<AnswerOptionsRecord, String> TEXT_RESPONSE = createField("text_response", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.answer_options.created_at</code>.
     */
    public final TableField<AnswerOptionsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.answer_options.updated_at</code>.
     */
    public final TableField<AnswerOptionsRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.answer_options.created_by</code>.
     */
    public final TableField<AnswerOptionsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.answer_options.updated_by</code>.
     */
    public final TableField<AnswerOptionsRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.answer_options</code> table reference
     */
    public AnswerOptions() {
        this("answer_options", null);
    }

    /**
     * Create an aliased <code>public.answer_options</code> table reference
     */
    public AnswerOptions(String alias) {
        this(alias, ANSWER_OPTIONS);
    }

    private AnswerOptions(String alias, Table<AnswerOptionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnswerOptions(String alias, Table<AnswerOptionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnswerOptionsRecord> getPrimaryKey() {
        return Keys.QUESTION_OPTIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnswerOptionsRecord>> getKeys() {
        return Arrays.<UniqueKey<AnswerOptionsRecord>>asList(Keys.QUESTION_OPTIONS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerOptions as(String alias) {
        return new AnswerOptions(alias, this);
    }

    /**
     * Rename this table
     */
    public AnswerOptions rename(String name) {
        return new AnswerOptions(name, null);
    }
}
